---
- name: Download from S3 to control node
  amazon.aws.s3_object:
    access_key: "{{ lookup('env', 'STG_AWS_ACCESS_KEY') }}"
    secret_key: "{{ lookup('env', 'STG_AWS_SECRET_KEY') }}"
    bucket: "{{ s3_bucket }}"
    object: "{{ service_name }}/{{ service_name }}-{{ build_number }}.zip"
    dest: "~/artifact/{{ service_name }}-{{ build_number }}.zip"
    mode: get
  delegate_to: localhost

- name: Create directory on managed nodes
  become: yes
  file:
    state: directory
    path: "/opt/{{ service_name }}/"

- name: Copy zip to managed nodes
  become: yes
  copy:
    src: "~/artifact/{{ service_name }}-{{ build_number }}.zip"
    dest: "/opt/{{ service_name }}/{{ service_name }}.zip"

- name: Remove file in control node
  file:
    path: "~/artifact/{{ service_name }}-{{ build_number }}.zip"
    state: absent
  delegate_to: localhost

- name: Unzip artifact
  become: yes
  command: "unzip -o {{ service_name }}.zip"
  args:
    chdir: "/opt/{{ service_name }}/"

- name: Change permission on tmp
  become: yes
  command: "chmod 777 -R /tmp"

- name: Install nodejs dependencies
  become: yes
  command: "npm install"
  args:
    chdir: "/opt/{{ service_name }}/"

- name: Run npm build
  become: yes
  command: "npm run build"
  args:
    chdir: "/opt/{{ service_name }}/"

- name: Stop service
  become: yes
  systemd:
    name: "{{ service_name }}"
    state: stopped

- name: Update mode start.sh
  become: yes
  ansible.builtin.file:
    path: "/opt/{{ service_name }}/{{ service_name }}.sh"
    mode: 'a+x'

- name: Start service
  become: yes
  systemd:
    name: "{{ service_name }}"
    state: started
