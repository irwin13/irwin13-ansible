{% for upstream in vhost_upstream_list %}
  upstream {{ upstream.name }} {  
{% for server in upstream.server_list %}  
    server {{ server.ip }}:{{ server.port }} weight={{ server.weight }};
{% endfor %}
  }

{% endfor %}

server {

    client_body_timeout 5s;
    client_header_timeout 5s;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name {{ vhost_domain_name }};

    # location / {
    #         try_files $uri $uri/ =404;
    # }

    #listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/{{ vhost_domain_name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ vhost_domain_name }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

{% for upstream in vhost_upstream_list %}
    location /{{ upstream.path }} {
      limit_req zone=one burst=20 nodelay;
      limit_conn addr 30;

      proxy_pass  http://{{ upstream.name }};
      proxy_set_header  X-Real-IP           $remote_addr;
      proxy_set_header  X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header   Host               $http_host;
      proxy_http_version 1.1;
      proxy_set_header Connection "";      
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 http_404;
    }

{% endfor %}

}

server {
    if ($host = {{ vhost_domain_name }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    #listen [::]:80;

    server_name {{ vhost_domain_name }};
    return 404; # managed by Certbot
}
